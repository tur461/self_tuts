{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "VoteCasted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Winner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "castVoteForMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_deReg",
          "type": "address"
        }
      ],
      "name": "deRegister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistrationList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isVoting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "memberList",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "voteCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isVoting",
          "type": "bool"
        }
      ],
      "name": "setVotingTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6687d21907a4395570d7d6cd7422f9e8388085345572ab338ed86bf8f747bdc3",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "615504",
    "logsBloom": "0x
    "blockHash": "0x5eb8c020177eba1922a3c45d5496e673cbb4495a1c424b58440c5adbb3f1d914",
    "transactionHash": "0x6687d21907a4395570d7d6cd7422f9e8388085345572ab338ed86bf8f747bdc3",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "615504",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "738e27a82990af947a5f0f9f737fd3fc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"VoteCasted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"castVoteForMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deReg\",\"type\":\"address\"}],\"name\":\"deRegister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistrationList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isVoting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"memberList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isVoting\",\"type\":\"bool\"}],\"name\":\"setVotingTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/evoting.sol\":\"EVoting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/evoting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\nimport \\\"./ownable.sol\\\";\\n\\nstruct Member{\\n    address addr;\\n    uint256 voteCount;\\n}\\n\\ncontract EVoting is Ownable{\\n\\n   \\n    Member[] public memberList;\\n    bool public isVoting;\\n    mapping(address=>bool) public hasVoted;\\n    mapping(address=>bool) public hasRegistered;\\n    event VoteCasted(address voter,string s);\\n    event Registered(address member);\\n\\n    function castVoteForMember(address _member) public {\\n\\n        require(isVoting, \\\"Voting has not started\\\");\\n        bool found;\\n        \\n        for(uint256 i=0; i<memberList.length; i++){\\n            \\n            if(memberList[i].addr == _member){\\n                require(!hasVoted[msg.sender], \\\"already voted\\\");\\n                hasVoted[msg.sender] = true;\\n                memberList[i].voteCount += 1;\\n                found = true;\\n                break;\\n            }\\n\\n        }\\n        require(found, \\\"Member not found\\\");\\n        emit VoteCasted(msg.sender, \\\"Voting complete\\\");\\n        \\n    }\\n\\n    function setVotingTo(bool _isVoting) public onlyOwner{\\n        // require(msg.sender == owner, \\\"Unauthorised\\\");\\n        isVoting = _isVoting;\\n    }\\n\\n    function register(address _member) public onlyOwner{\\n        // require(msg.sender == owner, \\\"Unauthorised\\\");\\n        require(!hasRegistered[_member],\\\"Already registered\\\");\\n        hasRegistered[_member] = true;\\n        memberList.push(Member(_member,0));\\n        emit Registered(_member);\\n    }\\n\\n// Only address return not voteCount\\n    // function getRegistrationList() public view returns(Member[] memory){\\n    //     return memberList;\\n    // }\\n\\n    function getRegistrationList() public view returns(address[] memory){\\n        address[] memory memberAddress = new address[](memberList.length);\\n        for(uint i = 0; i<memberList.length; i++){\\n            memberAddress[i] = memberList[i].addr;    \\n        }\\n        return memberAddress;\\n    }\\n    \\n\\n    \\n    function Winner() public view returns(address, uint256) {\\n        uint256 _voteCount;\\n        address memberAddress;\\n        require(isVoting == false, \\\"Election not ended yet\\\");\\n        for(uint i=0; i < memberList.length; i++){\\n            if(_voteCount < memberList[i].voteCount){\\n                _voteCount = memberList[i].voteCount;\\n                memberAddress = memberList[i].addr;\\n            }\\n        }\\n        return (memberAddress, _voteCount);\\n    }\\n\\n    function deRegister(address _deReg) public onlyOwner{\\n        // require(msg.sender == owner, \\\"Unauthorised\\\");\\n        for(uint256 i=0; i<memberList.length; i++){\\n            if(memberList[i].addr == _deReg){\\n            delete memberList[i];\\n            hasRegistered[_deReg] = false;\\n            }\\n        }\\n    } \\n}\\n\",\"keccak256\":\"0xe0e3fdcd594c343d2d3422e772e67779adb81fbb7866f9b19ceee236ef399cee\",\"license\":\"MIT\"},\"contracts/ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.17;\\n\\ncontract Ownable {\\n    address public owner;\\n\\n    constructor(){\\n       owner = msg.sender;\\n    } \\n\\n    modifier onlyOwner(){\\n        require(msg.sender == owner, \\\"Unauthorised\\\");\\n        _;\\n    }\\n}\",\"keccak256\":\"0xd2cb5f5c09262c80059309895081e054e5662040cc7f415b37f42ff98354468c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916331790556109c3806100326000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c806309eef43e1461009e5780631bbef399146100d65780634420e486146100e35780635b114af6146100f85780638da5cb5b1461010b578063a0d035261461012b578063b2b98ed21461014e578063b307fc6d14610175578063c3a4ebb814610188578063c3b23d301461019b578063f2a3e552146101b0575b600080fd5b6100c16100ac366004610850565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6002546100c19060ff1681565b6100f66100f1366004610850565b6101c3565b005b6100f6610106366004610850565b61033b565b60005461011e906001600160a01b031681565b6040516100cd9190610880565b6100c1610139366004610850565b60046020526000908152604090205460ff1681565b61015661041a565b604080516001600160a01b0390931683526020830191909152016100cd565b610156610183366004610894565b61051a565b6100f66101963660046108ad565b610552565b6101a361058f565b6040516100cd91906108cf565b6100f66101be366004610850565b61065c565b6000546001600160a01b031633146101f65760405162461bcd60e51b81526004016101ed9061091c565b60405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff16156102545760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016101ed565b6001600160a01b0381811660008181526004602090815260408083208054600160ff19909116811790915581518083018352948552918401838152825480840184559290935292517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600290920291820180546001600160a01b0319169190951617909355517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790920191909155517f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990610330908390610880565b60405180910390a150565b6000546001600160a01b031633146103655760405162461bcd60e51b81526004016101ed9061091c565b60005b60015481101561041657816001600160a01b03166001828154811061038f5761038f610942565b60009182526020909120600290910201546001600160a01b03160361040457600181815481106103c1576103c1610942565b60009182526020808320600290920290910180546001600160a01b03191681556001018290556001600160a01b03841682526004905260409020805460ff191690555b8061040e8161096e565b915050610368565b5050565b60025460009081908190819060ff161561046f5760405162461bcd60e51b8152602060048201526016602482015275115b1958dd1a5bdb881b9bdd08195b991959081e595d60521b60448201526064016101ed565b60005b600154811015610511576001818154811061048f5761048f610942565b9060005260206000209060020201600101548310156104ff57600181815481106104bb576104bb610942565b9060005260206000209060020201600101549250600181815481106104e2576104e2610942565b60009182526020909120600290910201546001600160a01b031691505b806105098161096e565b915050610472565b50939092509050565b6001818154811061052a57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b0316331461057c5760405162461bcd60e51b81526004016101ed9061091c565b6002805460ff1916911515919091179055565b6001546060906000906001600160401b038111156105af576105af610987565b6040519080825280602002602001820160405280156105d8578160200160208202803683370190505b50905060005b60015481101561065657600181815481106105fb576105fb610942565b600091825260209091206002909102015482516001600160a01b039091169083908390811061062c5761062c610942565b6001600160a01b03909216602092830291909101909101528061064e8161096e565b9150506105de565b50919050565b60025460ff166106a75760405162461bcd60e51b8152602060048201526016602482015275159bdd1a5b99c81a185cc81b9bdd081cdd185c9d195960521b60448201526064016101ed565b6000805b6001548110156107b357826001600160a01b0316600182815481106106d2576106d2610942565b60009182526020909120600290910201546001600160a01b0316036107a1573360009081526003602052604090205460ff16156107415760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481d9bdd1959609a1b60448201526064016101ed565b336000908152600360205260409020805460ff19166001908117909155805481908390811061077257610772610942565b90600052602060002090600202016001016000828254610792919061099d565b90915550600192506107b39050565b806107ab8161096e565b9150506106ab565b50806107f45760405162461bcd60e51b815260206004820152601060248201526f13595b58995c881b9bdd08199bdd5b9960821b60448201526064016101ed565b6040805133815260208101829052600f818301526e566f74696e6720636f6d706c65746560881b606082015290517fb7821d50dfbda5ea310faebbeac5217bc1bb0cabe463e76b80e48d11e57df0989181900360800190a15050565b60006020828403121561086257600080fd5b81356001600160a01b038116811461087957600080fd5b9392505050565b6001600160a01b0391909116815260200190565b6000602082840312156108a657600080fd5b5035919050565b6000602082840312156108bf57600080fd5b8135801515811461087957600080fd5b6020808252825182820181905260009190848201906040850190845b818110156109105783516001600160a01b0316835292840192918401916001016108eb565b50909695505050505050565b6020808252600c908201526b155b985d5d1a1bdc9a5cd95960a21b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161098057610980610958565b5060010190565b634e487b7160e01b600052604160045260246000fd5b808201808211156109b0576109b0610958565b9291505056fea164736f6c6343000811000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100995760003560e01c806309eef43e1461009e5780631bbef399146100d65780634420e486146100e35780635b114af6146100f85780638da5cb5b1461010b578063a0d035261461012b578063b2b98ed21461014e578063b307fc6d14610175578063c3a4ebb814610188578063c3b23d301461019b578063f2a3e552146101b0575b600080fd5b6100c16100ac366004610850565b60036020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6002546100c19060ff1681565b6100f66100f1366004610850565b6101c3565b005b6100f6610106366004610850565b61033b565b60005461011e906001600160a01b031681565b6040516100cd9190610880565b6100c1610139366004610850565b60046020526000908152604090205460ff1681565b61015661041a565b604080516001600160a01b0390931683526020830191909152016100cd565b610156610183366004610894565b61051a565b6100f66101963660046108ad565b610552565b6101a361058f565b6040516100cd91906108cf565b6100f66101be366004610850565b61065c565b6000546001600160a01b031633146101f65760405162461bcd60e51b81526004016101ed9061091c565b60405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff16156102545760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016101ed565b6001600160a01b0381811660008181526004602090815260408083208054600160ff19909116811790915581518083018352948552918401838152825480840184559290935292517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6600290920291820180546001600160a01b0319169190951617909355517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf790920191909155517f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e990610330908390610880565b60405180910390a150565b6000546001600160a01b031633146103655760405162461bcd60e51b81526004016101ed9061091c565b60005b60015481101561041657816001600160a01b03166001828154811061038f5761038f610942565b60009182526020909120600290910201546001600160a01b03160361040457600181815481106103c1576103c1610942565b60009182526020808320600290920290910180546001600160a01b03191681556001018290556001600160a01b03841682526004905260409020805460ff191690555b8061040e8161096e565b915050610368565b5050565b60025460009081908190819060ff161561046f5760405162461bcd60e51b8152602060048201526016602482015275115b1958dd1a5bdb881b9bdd08195b991959081e595d60521b60448201526064016101ed565b60005b600154811015610511576001818154811061048f5761048f610942565b9060005260206000209060020201600101548310156104ff57600181815481106104bb576104bb610942565b9060005260206000209060020201600101549250600181815481106104e2576104e2610942565b60009182526020909120600290910201546001600160a01b031691505b806105098161096e565b915050610472565b50939092509050565b6001818154811061052a57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b03909116915082565b6000546001600160a01b0316331461057c5760405162461bcd60e51b81526004016101ed9061091c565b6002805460ff1916911515919091179055565b6001546060906000906001600160401b038111156105af576105af610987565b6040519080825280602002602001820160405280156105d8578160200160208202803683370190505b50905060005b60015481101561065657600181815481106105fb576105fb610942565b600091825260209091206002909102015482516001600160a01b039091169083908390811061062c5761062c610942565b6001600160a01b03909216602092830291909101909101528061064e8161096e565b9150506105de565b50919050565b60025460ff166106a75760405162461bcd60e51b8152602060048201526016602482015275159bdd1a5b99c81a185cc81b9bdd081cdd185c9d195960521b60448201526064016101ed565b6000805b6001548110156107b357826001600160a01b0316600182815481106106d2576106d2610942565b60009182526020909120600290910201546001600160a01b0316036107a1573360009081526003602052604090205460ff16156107415760405162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481d9bdd1959609a1b60448201526064016101ed565b336000908152600360205260409020805460ff19166001908117909155805481908390811061077257610772610942565b90600052602060002090600202016001016000828254610792919061099d565b90915550600192506107b39050565b806107ab8161096e565b9150506106ab565b50806107f45760405162461bcd60e51b815260206004820152601060248201526f13595b58995c881b9bdd08199bdd5b9960821b60448201526064016101ed565b6040805133815260208101829052600f818301526e566f74696e6720636f6d706c65746560881b606082015290517fb7821d50dfbda5ea310faebbeac5217bc1bb0cabe463e76b80e48d11e57df0989181900360800190a15050565b60006020828403121561086257600080fd5b81356001600160a01b038116811461087957600080fd5b9392505050565b6001600160a01b0391909116815260200190565b6000602082840312156108a657600080fd5b5035919050565b6000602082840312156108bf57600080fd5b8135801515811461087957600080fd5b6020808252825182820181905260009190848201906040850190845b818110156109105783516001600160a01b0316835292840192918401916001016108eb565b50909695505050505050565b6020808252600c908201526b155b985d5d1a1bdc9a5cd95960a21b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161098057610980610958565b5060010190565b634e487b7160e01b600052604160045260246000fd5b808201808211156109b0576109b0610958565b9291505056fea164736f6c6343000811000a",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 302,
        "contract": "contracts/evoting.sol:EVoting",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 13,
        "contract": "contracts/evoting.sol:EVoting",
        "label": "memberList",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Member)7_storage)dyn_storage"
      },
      {
        "astId": 15,
        "contract": "contracts/evoting.sol:EVoting",
        "label": "isVoting",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 19,
        "contract": "contracts/evoting.sol:EVoting",
        "label": "hasVoted",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 23,
        "contract": "contracts/evoting.sol:EVoting",
        "label": "hasRegistered",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Member)7_storage)dyn_storage": {
        "base": "t_struct(Member)7_storage",
        "encoding": "dynamic_array",
        "label": "struct Member[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_struct(Member)7_storage": {
        "encoding": "inplace",
        "label": "struct Member",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/evoting.sol:EVoting",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6,
            "contract": "contracts/evoting.sol:EVoting",
            "label": "voteCount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}